{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "nicName": {
            "type": "String"
        },
        "storageAccountName": {
            "defaultValue": "rgdemostor",
            "type": "String"
        },
        "existingVirtualNetworkName": {
            "type": "String",
            "metadata": {
                "description": "Name of the existing VNET"
            }
        },
        "copyCount": {
            "type": "Int",
            "metadata": {
                "description": "number of resource copies to make with copyindex loops"
            }
        },
        "automationAccountResourcegroup": {
            "type": "String"
        },
        "nodeConfigurationName": {
            "type": "String"
        },
        "automationAccountName": {
            "type": "String"
        },
        "existingVirtualNetworkResourceGroup": {
            "defaultValue": "[resourceGroup().name]",
            "type": "String",
            "metadata": {
                "description": "Name of the existing VNET resource group"
            }
        },
        "subnetName": {
            "type": "String",
            "metadata": {
                "description": "Name of the subnet in the virtual network you want to use"
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "windowsOSVersion": {
            "defaultValue": "20h1-ent",
            "allowedValues": [
                "20h1-ent",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "type": "String",
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B4ms",
            "type": "String",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "domainToJoin": {
            "type": "String",
            "metadata": {
                "description": "The FQDN of the AD domain"
            }
        },
        "domainUsername": {
            "type": "String",
            "metadata": {
                "description": "Username of the account on the domain"
            }
        },
        "dnsLabelPrefix": {
            "type": "String",
            "metadata": {
                "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
            }
        },
        "domainPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password of the account on the domain"
            }
        },
        "ouPath": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: \"OU=testOU; DC=domain; DC=Domain; DC=com\""
            }
        },
        "domainJoinOptions": {
            "defaultValue": 3,
            "type": "Int",
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            }
        }
    },
    "variables": {
        "subnetRef": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'),  parameters('subnetName'))]",
		"imagename": "SEC-LAN_Windows10_Baseline"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('storageAccountName'), copyIndex(101))]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {
                "ipRules": [
                    {
                        "value": "string",
                        "action": "Allow"
                    }
                ]
            },
            "copy": {
                "name": "storageCopy",
                "count": "[parameters('copyCount')]"
            }
        },
		 {
            "type": "Microsoft.Compute/images",
            "apiVersion": "2019-12-01",
            "name": "[variables('imageName')]",
            "location": "[parameters('location')]",
            "properties": {
                "storageProfile": {
                    "osDisk": {
                        "osType": "Windows",
                        "osState": "Generalized",
                        "blobUri": "/subscriptions/1ddb0b36-98c7-49ef-81e7-34e034140f42/resourceGroups/RG-DEMO-VDI/providers/Microsoft.Compute/disks/azurw4fh11wk101_OsDisk_1_122dd99e240243779123974e84ac893b",
                        "storageAccountType": "Standard_LRS"
                    }
                },
                "hyperVGeneration": "V2"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('nicName'), copyIndex(101), '_')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(uniquestring(resourceGroup().id), 'IP')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicCopy",
                "count": "[parameters('copyCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[concat(parameters('dnsLabelPrefix'), copyIndex(101))]",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('dnsLabelPrefix'), copyIndex(101))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                 "storageProfile": {
                    "imageReference": {
                        "id": "[resourceId('Microsoft.Compute/images', variables('imageName'))]"
                    }
                },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "diskSizeGB": 256
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicName'),copyIndex(101),'_'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountName'), copyIndex(101)))).primaryEndpoints.blob]"
                    }
                },
            
            "copy": {
                "name": "vmCopy",
                "count": "[parameters('copyCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('dnsLabelPrefix'),copyIndex(101),'/joindomain')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',parameters('dnsLabelPrefix'), copyIndex(101))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainToJoin')]",
                    "OUPath": "[parameters('ouPath')]",
                    "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
                    "Restart": "true",
                    "Options": "[parameters('domainJoinOptions')]"
                },
                "protectedSettings": {
                    "Password": "[parameters('domainPassword')]"
                }
            },
            "copy": {
                "name": "DomainJoinCopy",
                "count": "[parameters('copyCount')]"
            }
        }
    ]
}
